pipeline{
agent any

  stages{
  
    stage("Git Checkout"){
      steps{
          git branch: 'J2EE', credentialsId: 'GitID', url: 'https://github.com/shreemansandeep/javaonlinebookstore.git'
    }
}

stage("Unit testing"){
       steps{
              sh 'mvn test'
             }
        }
        
 stage("Integration testing"){
                steps{
                      sh 'mvn verify -DskipUnitTests'
                }
        }

stage("Maven Build"){
      steps{
          sh "mvn clean install"
  
    }
}

stage("Static code analysis"){
            
           steps{
            script{
                withSonarQubeEnv(credentialsId: 'sonartoken') {
                            sh 'mvn clean package sonar:sonar'
                      }
                     }
                   }
                  }
                  
  stage("Quality Gate Status"){
            
           steps{
            script{
                waitForQualityGate abortPipeline: false, credentialsId: 'sonartoken'
                     }
                   }
                  }
                  
   stage("Upload War To Nexus"){
            
           steps{
            script{
            
                def pom = readMavenPom file: 'pom.xml'
                
                def nexusRepo = pom.version.endsWith("SNAPSHOT") ? "onlinebookown-snapshot" : "onlinebookown-release"
            
                nexusArtifactUploader artifacts: [
                [
                    artifactId: 'onlinebookstore', 
                    classifier: '', 
                    file: 'target/onlinebookstore.war', 
                    type: 'war'
                  ]
                ], 
                credentialsId: 'nexus-auth', 
                groupId: 'onlinebookstore', 
                nexusUrl: '43.204.112.69:8081', 
                nexusVersion: 'nexus3', 
                protocol: 'http', 
                repository: nexusRepo, 
                version: "${pom.version}"
                     }
                   }
                  }


}
}
